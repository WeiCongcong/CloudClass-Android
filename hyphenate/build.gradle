plugins {
    id 'com.android.library'
    id 'com.github.dcendents.android-maven'
}
apply plugin: 'kotlin-android'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.hyphenate.versionCode
        versionName rootProject.ext.hyphenate.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
//    compileOnly project(path: ':edu')

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'org.jetbrains:annotations:15.0'

    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.recyclerview:recyclerview:1.2.0-beta01"
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    api 'io.hyphenate:hyphenate-chat:3.8.3'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}

// special the version using when publishing to maven
// used by maven.gradle
project.group = rootProject.ext.maven.group
project.version = rootProject.ext.hyphenate.versionName
project.description = "hyphenate"
project.ext.url = "https://bitbucket.agoralab.co/projects/ADUC/repos/cloudclass-android/browse"

task sourcesJar(type: Jar) {
    if (project.hasProperty("kotlin")) {
        from android.sourceSets.main.java.getSrcDirs()
    } else if (project.hasProperty("android")) {
        from android.sourceSets.main.java.sourceFiles
    } else {
        println project
        from sourceSets.main.allSource
    }
    classifier = 'sources'
}

def maven_gradle_path = "${rootDir.absolutePath}/maven.gradle"
if (new File(maven_gradle_path).exists()) {
    apply from: maven_gradle_path
}